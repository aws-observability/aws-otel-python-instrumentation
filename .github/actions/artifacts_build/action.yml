name: Build and Push aws-opentelemetry-distro Wheel and Image files according inputs
description: |
  This action assumes that Repo was checked out and Python was set correctly

inputs:
  aws-region:
    required: true
    description: "AWS Region"
  image_uri_with_tag:
    required: true
    description: "Image URI with Tag"
  image_registry:
    required: true
    description: "Image Registry"
  snapshot-ecr-role:
    require: true
    description: "IAM Role used for pushing to snapshot ecr"
  push_image:
    required: true
    description: "Whether Push image to ECR"
  load_image:
    required: true
    description: "Whether Push image to ECR"


runs:
  using: "composite"
  steps:
    - name: Install tox
      shell: bash
      run: pip install tox==3.27.1 tox-factor

    - name: Cache tox environment
      # Preserves .tox directory between runs for faster installs
      uses: actions/cache@v1
      with:
        path: |
          .tox
          ~/.cache/pip
        key: v7-build-tox-cache-py38-aws-opentelemetry-distro-ubuntu-latest-${{ hashFiles('tox.ini', 'dev-requirements.txt') }}

    - name: run tox
      shell: bash
      run: tox -f py38-aws-opentelemetry-distro -- -ra --benchmark-json=py38-aws-opentelemetry-distro-ubuntu-latest-benchmark.json

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.snapshot-ecr-role }}
        aws-region: ${{ inputs.aws-region }}

    - name: Install Dependencies and Build Wheel
      id: staging_wheel_build
      shell: bash
      run: |
        pip install --upgrade pip setuptools wheel packaging build
        rm -rf ./dist/*
        cd ./aws-opentelemetry-distro
        python -m build --outdir ../dist

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to AWS ECR
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.image_registry }}
      env:
        AWS_REGION: ${{ inputs.aws-region }}

    - name: Build and push image according to input
      uses: docker/build-push-action@v5
      with:
        push: ${{ inputs.push_image }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        tags: ${{ inputs.image_uri_with_tag }}
        load: ${{ inputs.load_image }}
