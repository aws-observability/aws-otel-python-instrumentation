name: Nightly Upstream Snapshot Build

on:
  schedule:
    - cron: "21 3 * * *"
  workflow_dispatch:
  push:
    branches:
      - zhaez/nightly-build

env:
  BRANCH_NAME: nightly-dependency-updates

jobs:
  update-and-create-pr:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
      otel_python_version: ${{ steps.get_versions.outputs.otel_python_version }}
      otel_contrib_version: ${{ steps.get_versions.outputs.otel_contrib_version }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check if nightly branch already exists
      run: |
        if git ls-remote --exit-code --heads origin "$BRANCH_NAME"; then
          echo "Branch $BRANCH_NAME already exists. Skipping run to avoid conflicts."
          echo "Please merge or close the existing PR before the next nightly run."
          exit 1
        fi
    
    - name: Configure git and create branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b "$BRANCH_NAME"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install toml requests
    
    - name: Get latest upstream versions
      id: get_versions
      run: python scripts/get_upstream_versions.py
    
    - name: Update dependencies
      env:
        OTEL_PYTHON_VERSION: ${{ steps.get_versions.outputs.otel_python_version }}
        OTEL_CONTRIB_VERSION: ${{ steps.get_versions.outputs.otel_contrib_version }}
      run: python scripts/update_dependencies.py
    
    - name: Check for changes and create PR
      id: check_changes
      run: |
        if git diff --quiet; then
          echo "No dependency updates needed"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Dependencies were updated"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          
          # Create PR
          git add aws-opentelemetry-distro/pyproject.toml
          git commit -m "chore: update OpenTelemetry dependencies to ${{ steps.get_versions.outputs.otel_python_version }}/${{ steps.get_versions.outputs.otel_contrib_version }}"
          git push origin "$BRANCH_NAME"
          
          gh pr create \
            --title "Nightly dependency update: OpenTelemetry ${{ steps.get_versions.outputs.otel_python_version }}/${{ steps.get_versions.outputs.otel_contrib_version }}" \
            --body "Automated update of OpenTelemetry dependencies.

          **Updated versions:**
          - OpenTelemetry Python: ${{ steps.get_versions.outputs.otel_python_version }}
          - OpenTelemetry Contrib: ${{ steps.get_versions.outputs.otel_contrib_version }}" \
            --base main \
            --head "$BRANCH_NAME"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-test:
    needs: update-and-create-pr
    if: needs.update-and-create-pr.outputs.has_changes == 'true'
    uses: ./.github/workflows/main-build.yml
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    with:
      ref: nightly-dependency-updates