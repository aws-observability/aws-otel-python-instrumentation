name: Python Instrumentation Main Build
on:
  push:
    branches:
      - main
      - "release/v*"
  pull_request:
    branches:
      - main
      - "release/v*"
env:
  AWS_DEFAULT_REGION: us-east-1
  TEST_TAG: 611364707713.dkr.ecr.us-east-1.amazonaws.com/eks/observability/adot-autoinstrumentation-python:test
  STAGING_ECR_REGISTRY: 611364707713.dkr.ecr.us-east-1.amazonaws.com
  STAGING_ECR_REPOSITORY: eks/observability/adot-autoinstrumentation-python

concurrency:
  group: python-instrumentation-main-build
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      python_image_tag: ${{ steps.java_agent_versioning.outputs.STAGING_TAG}}
      staging-image-name: ${{ steps.imageNameOutput.outputs.imageName }}
      staging_wheel_file: ${}
    steps:
      - name: Checkout Contrib Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Dependencies and Build Wheel
        run: |
          pip install --upgrade pip setuptools wheel packaging build
          rm -rf ./dist/*
          cd ./aws-opentelemetry-distro
          python3 -m build --outdir ../dist
          cd ../dist
          pkg_version=$(grep '__version__' ../aws-opentelemetry-distro/src/amazon/opentelemetry/distro/version.py | awk -F '"' '{print $2}')
          pip wheel --no-deps aws_opentelemetry_distro-${pkg_version}.tar.gz

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Upload wheel to S3
        run: aws s3 cp dist/*.whl s3://your-s3-bucket/path/to/wheels/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to AWS ECR
        uses: docker/login-action@v3
        with:
          registry: 611364707713.dkr.ecr.us-east-1.amazonaws.com
        env:
          AWS_REGION: us-east-1

      - name: Copy Files to Docker Build Context
        run: |
          mkdir -p $GITHUB_WORKSPACE/auto-instrumentation/
          cp -r ./distro $GITHUB_WORKSPACE/auto-instrumentation/
          cp -r docker_requirements $GITHUB_WORKSPACE/auto-instrumentation//

      - name: Build and push staging image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: $GITHUB_WORKSPACE/auto-instrumentation/
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.STAGING_ECR_REGISTRY }}/${{ env.STAGING_ECR_REPOSITORY }}:${{ steps.java_agent_versioning.outputs.STAGING_TAG }}

      - name: Set image name to output
        id: imageNameOutput
        run: echo "imageName=${{ env.STAGING_ECR_REGISTRY }}/${{ env.STAGING_ECR_REPOSITORY }}:${{ steps.java_agent_versioning.outputs.STAGING_TAG }}" >> "$GITHUB_OUTPUT"
