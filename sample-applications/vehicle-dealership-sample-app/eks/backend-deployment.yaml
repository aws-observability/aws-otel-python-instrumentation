# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: vehicle-inventory-backend
  name: vehicle-inventory-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: vehicle-inventory-backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.31.2 (HEAD)
        instrumentation.opentelemetry.io/inject-python: "true"
      creationTimestamp: null
      labels:
        io.kompose.network/vehicleinventoryapp-default: "true"
        io.kompose.service: vehicle-inventory-backend
    spec:
      containers:
        - args:
            - sh
            - -c
            - python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8001 --noreload
          image: ${REPOSITORY_PREFIX}/pythonsampleapp/vehicle-inventory-service:latest
          name: vehicle-inventory-backend
          env:
            - name: POSTGRES_DATABASE
              value: vehicle_inventory
            - name: POSTGRES_PASSWORD
              value: ${POSTGRES_PASSWORD}
            - name: POSTGRES_USER
              value: djangouser
            - name: PYTHONPATH
              value: "/vehicle-inventory-app"
            - name: DJANGO_SETTINGS_MODULE
              value: "VehicleInventoryApp.settings"
#              TODO: Remove OTEL_TRACES_SAMPLER when XRay trace sampler is ready
            - name: OTEL_TRACES_SAMPLER
              value: "always_on"
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
              hostPort: 8001
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
