# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
version: '3'
services:
  db:
    image: mysql:8.0
    container_name: vehicle_inventory_db
    restart: always
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-p${MYSQL_PASSWORD}", "-e", "SELECT 1"]
      timeout: 20s
      retries: 10
    expose:
      - 3306

  vehicle-inventory-backend:
    image: pythonsampleapp/vehicle-inventory-service
    build:
      context: .
      dockerfile: VehicleInventoryApp/Dockerfile
    container_name: vehicle-inventory-backend
    command: sh -c "python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8001"
    restart: always
    volumes:
      - ./VehicleInventoryApp/.:/vehicle-inventory-app
    ports:
      - "8001:8001"
    depends_on:
       db:
          condition: service_healthy

  image-backend:
    image: pythonsampleapp/image-service
    build:
      context: .
      dockerfile: ImageServiceApp/Dockerfile
    container_name: image-service-backend
    command: sh -c "python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - ./ImageServiceApp/.:/image-service-app
      - $HOME/.aws/credentials:/home/app/.aws/credentials:ro
    ports:
      - "8000:8000"
volumes:
  data:

networks:
  mynet: